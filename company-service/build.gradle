plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.3'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.sparta'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2024.0.0")
}

dependencies {
    // Spring Boot 기본 설정

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    //implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // PostgreSQL 설정 (DB 연결)
    implementation 'org.postgresql:postgresql:42.7.2'

    //  Feign Client 관련 의존성 추가
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

    //  Spring Validation 추가
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    //  JPA 트랜잭션 관리 추가
    implementation 'jakarta.transaction:jakarta.transaction-api:2.0.0'

    //  Spring Data JPA 추가
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // Swagger(OpenAPI) 문서화
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

    // Actuator 추가 (서비스 헬스 체크 및 메트릭 모니터링)
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    //org.postgresql:postgresql 드라이버만 존재하지만, 커넥션 풀을 관리하는 HikariCP 설정이 없음.
    //HikariCP를 사용하면 성능 최적화 가능.
    implementation 'com.zaxxer:HikariCP'

    // Lombok (코드 자동 생성)
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // 테스트 관련 의존성
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // JUnit 5(JUnit Jupiter) 명시적으로 추가
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'

    // Mockito Core 라이브러리 추가
    testImplementation 'org.mockito:mockito-core:5.7.0'

    // Mockito JUnit 라이브러리 추가 (JUnit5 사용 시)
    testImplementation 'org.mockito:mockito-junit-jupiter:5.7.0'


}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}



tasks.named('bootJar') {
    mainClass.set('com.teamsparta8.company.CompanyServiceApplication')
}